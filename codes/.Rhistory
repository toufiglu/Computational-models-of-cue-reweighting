make_results_low_representations <- function(data) {
p.results <-
basic_low_result_plot(data) +
facet_grid(prior_kappa ~ prior_nu) +
ggh4x::force_panelsizes(cols = result.panel.size, rows = result.panel.size)
}
high.representation.independent <- high.representation.independent %>%
mutate(model = "highindependent")
low.representation.independent <- low.representation.independent %>%
mutate(model = "lowindependent")
high.representation.sequential <- high.representation.sequential %>%
mutate(model = "highsequential")
low.representation.sequential <- low.representation.sequential %>%
mutate(model = "lowsequential")
p.rep.high.ind <- make_results_high_representations(high.representation.independent)
p.rep.high.seq <- make_results_high_representations(high.representation.sequential)
p.rep.low.ind <- make_results_low_representations(low.representation.independent)
p.rep.low.seq <- make_results_low_representations(low.representation.sequential)
p.rep.high.ind
low.representation.sequential
low.representation.sequential$prob.p
library(ggplot2)
library(car)
set.seed(123)  # for reproducibility
data <- data.frame(x = rnorm(100, mean = 5, sd = 1),
y = rnorm(100, mean = 5, sd = 1))
x_range <- range(data$x, na.rm = TRUE)
y_range <- range(data$y, na.rm = TRUE)
ggplot(data, aes(x = x, y = y)) +
geom_point(color = "blue") +
stat_ellipse(type = "norm", level = 0.95, fill = "blue", alpha = 0.2) +
xlim(x_range[1] - 3, x_range[2] + 3) +  # Widen x axis
ylim(y_range[1] - 3, y_range[2] + 3) +  # Widen y axis
ggtitle("Scatterplot with 95% Confidence Interval") +
theme_minimal()
data$group <- 'Blue'
set.seed(456)  # for reproducibility
data2 <- data.frame(x = rnorm(100, mean = 8, sd = 1),
y = rnorm(100, mean = 8, sd = 1))
data2$group <- 'Red'
combined_data <- rbind(data, data2)
ggplot(combined_data, aes(x = x, y = y, color = group)) +
geom_point() +  # automatically uses the color aesthetic set by 'group'
stat_ellipse(type = "norm", level = 0.95, aes(fill = group), alpha = 0.2) +
scale_color_manual(values = c("Blue" = "blue", "Red" = "red")) +
scale_fill_manual(values = c("Blue" = "blue", "Red" = "red")) +
xlim(min(c(data$x, data2$x)) - 3, max(c(data$x, data2$x)) + 3) +
ylim(min(c(data$y, data2$y)) - 3, max(c(data$y, data2$y)) + 3) +
ggtitle("Scatterplot with Two Distributions") +
theme_minimal()
ggplot(data2, aes(x = x, y = y)) +
geom_point(color = "red") +  # Plot points in red
stat_ellipse(type = "norm", level = 0.95, fill = "red", alpha = 0.2) +  # Confidence ellipse in red
xlim(mean(data2$x) - 4, mean(data2$x) + 4) +  # Dynamically set x axis limits
ylim(mean(data2$y) - 4, mean(data2$y) + 4) +  # Dynamically set y axis limits
ggtitle("Scatterplot with Red Dots Distribution") +
theme_minimal()
blue_dot <- data.frame(x = 6, y = 7, group = 'Blue')
combined_data <- rbind(data2, blue_dot)
ggplot(combined_data, aes(x = x, y = y, color = group)) +
geom_point() +  # automatically uses the color aesthetic set by 'group'
stat_ellipse(data = data2, type = "norm", level = 0.95, aes(fill = group), alpha = 0.2) +
scale_color_manual(values = c("Blue" = "blue", "Red" = "red")) +
scale_fill_manual(values = c("Blue" = NA, "Red" = "red")) +  # No fill for blue group
xlim(min(combined_data$x) - 3, max(combined_data$x) + 3) +
ylim(min(combined_data$y) - 3, max(combined_data$y) + 3) +
ggtitle("Scatterplot with Red Dots and a Single Blue Dot") +
theme_minimal()
library(ggplot2)
library(car)
library(ggplot2)
library(car)
set.seed(123)  # for reproducibility
data <- data.frame(x = rnorm(100, mean = 5, sd = 1),
y = rnorm(100, mean = 5, sd = 1))
x_range <- range(data$x, na.rm = TRUE)
y_range <- range(data$y, na.rm = TRUE)
ggplot(data, aes(x = x, y = y)) +
geom_point(color = "blue") +
stat_ellipse(type = "norm", level = 0.95, fill = "blue", alpha = 0.2) +
xlim(x_range[1] - 3, x_range[2] + 3) +  # Widen x axis
ylim(y_range[1] - 3, y_range[2] + 3) +  # Widen y axis
ggtitle("Scatterplot with 95% Confidence Interval") +
theme_minimal() +
theme(axis.text = element_blank(),
axis.ticks = element_blank())
set.seed(123)  # for reproducibility
data <- data.frame(x = rnorm(100, mean = 2, sd = 1),
y = rnorm(100, mean = 2, sd = 1))
x_range <- range(data$x, na.rm = TRUE)
y_range <- range(data$y, na.rm = TRUE)
ggplot(data, aes(x = x, y = y)) +
geom_point(color = "blue") +
stat_ellipse(type = "norm", level = 0.95, fill = "blue", alpha = 0.2) +
xlim(x_range[1] - 3, x_range[2] + 3) +  # Widen x axis
ylim(y_range[1] - 3, y_range[2] + 3) +  # Widen y axis
ggtitle("Scatterplot with 95% Confidence Interval") +
theme_minimal() +
theme(axis.text = element_blank(),
axis.ticks = element_blank())
set.seed(123)  # for reproducibility
data <- data.frame(x = rnorm(100, mean = 2, sd = 1),
y = rnorm(100, mean = 2, sd = 1))
x_range <- range(data$x, na.rm = TRUE)
y_range <- range(data$y, na.rm = TRUE)
ggplot(data, aes(x = x, y = y)) +
geom_point(color = "blue") +
stat_ellipse(type = "norm", level = 0.95, fill = "blue", alpha = 0.2) +
xlim(x_range[1] - 3, x_range[2] + 3) +  # Widen x axis
ylim(y_range[1] - 3, y_range[2] + 3) +  # Widen y axis
ggtitle("Scatterplot with 95% Confidence Interval") +
theme_minimal()
set.seed(123)  # for reproducibility
data <- data.frame(x = rnorm(100, mean = 2, sd = 1),
y = rnorm(100, mean = 2, sd = 1))
x_range <- range(data$x, na.rm = TRUE)
y_range <- range(data$y, na.rm = TRUE)
ggplot(data, aes(x = x, y = y)) +
geom_point(color = "blue") +
stat_ellipse(type = "norm", level = 0.95, fill = "blue", alpha = 0.2) +
ggtitle("Scatterplot with 95% Confidence Interval") +
theme_minimal()
set.seed(123)  # for reproducibility
data <- data.frame(x = rnorm(100, mean = 2, sd = 1),
y = rnorm(100, mean = 2, sd = 1))
x_range <- range(data$x, na.rm = TRUE)
y_range <- range(data$y, na.rm = TRUE)
ggplot(data, aes(x = x, y = y)) +
geom_point(color = "blue") +
stat_ellipse(type = "norm", level = 0.95, fill = "blue", alpha = 0.2) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
ggtitle("Scatterplot with 95% Confidence Interval") +
theme_minimal()
set.seed(123)  # for reproducibility
data <- data.frame(x = rnorm(100, mean = 2, sd = 1),
y = rnorm(100, mean = 2, sd = 1))
x_range <- range(data$x, na.rm = TRUE)
y_range <- range(data$y, na.rm = TRUE)
ggplot(data, aes(x = x, y = y)) +
geom_point(color = "blue") +
stat_ellipse(type = "norm", level = 0.95, fill = "blue", alpha = 0.2) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
ggtitle("Scatterplot with 95% Confidence Interval") +
theme_minimal() +
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
axis.line = element_line(color = "black", size = 1.2))
set.seed(123)  # for reproducibility
data <- data.frame(x = rnorm(100, mean = 2, sd = 1),
y = rnorm(100, mean = 2, sd = 1))
x_range <- range(data$x, na.rm = TRUE)
y_range <- range(data$y, na.rm = TRUE)
ggplot(data, aes(x = x, y = y)) +
geom_point(color = "blue") +
stat_ellipse(type = "norm", level = 0.95, fill = "blue", alpha = 0.2) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0), limits = c(0, 10)) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 10)) +
ggtitle("Scatterplot with 95% Confidence Interval") +
theme_minimal() +
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
axis.line = element_line(color = "black", size = 1.2))
set.seed(123)  # for reproducibility
data <- data.frame(x = rnorm(100, mean = 2, sd = 1),
y = rnorm(100, mean = 2, sd = 1))
x_range <- range(data$x, na.rm = TRUE)
y_range <- range(data$y, na.rm = TRUE)
ggplot(data, aes(x = x, y = y)) +
geom_point(color = "blue") +
stat_ellipse(type = "norm", level = 0.95, fill = "blue", alpha = 0.2) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, 0), limits = c(0, 5)) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 5)) +
ggtitle("Scatterplot with 95% Confidence Interval") +
theme_minimal() +
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
axis.line = element_line(color = "black", size = 1.2))
set.seed(123)  # for reproducibility
data <- data.frame(x = rnorm(100, mean = 2, sd = 1),
y = rnorm(100, mean = 2, sd = 1))
x_range <- range(data$x, na.rm = TRUE)
y_range <- range(data$y, na.rm = TRUE)
ggplot(data, aes(x = x, y = y)) +
geom_point(color = "blue") +
stat_ellipse(type = "norm", level = 0.95, fill = "blue", alpha = 0.2) +
scale_x_continuous(expand = c(0, 0)) +
scale_y_continuous(expand = c(0, 0)) +
scale_x_continuous(expand = c(0, -2), limits = c(0, 5)) +
scale_y_continuous(expand = c(0, -2), limits = c(0, 5)) +
ggtitle("Scatterplot with 95% Confidence Interval") +
theme_minimal() +
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
axis.line = element_line(color = "black", size = 1.2))
set.seed(123)  # for reproducibility
data <- data.frame(x = rnorm(100, mean = 2, sd = 1),
y = rnorm(100, mean = 2, sd = 1))
x_range <- range(data$x, na.rm = TRUE)
y_range <- range(data$y, na.rm = TRUE)
ggplot(data, aes(x = x, y = y)) +
geom_point(color = "blue") +
stat_ellipse(type = "norm", level = 0.95, fill = "blue", alpha = 0.2) +
scale_x_continuous(expand = c(0, -2), limits = c(0, 5)) +
scale_y_continuous(expand = c(0, -2), limits = c(0, 5)) +
ggtitle("Scatterplot with 95% Confidence Interval") +
theme_minimal() +
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
axis.line = element_line(color = "black", size = 1.2))
set.seed(123)  # for reproducibility
data <- data.frame(x = rnorm(100, mean = 2, sd = 1),
y = rnorm(100, mean = 2, sd = 1))
x_range <- range(data$x, na.rm = TRUE)
y_range <- range(data$y, na.rm = TRUE)
ggplot(data, aes(x = x, y = y)) +
geom_point(color = "blue") +
stat_ellipse(type = "norm", level = 0.95, fill = "blue", alpha = 0.2) +
scale_x_continuous(expand = c(0, 0), limits = c(-2, 5)) +
scale_y_continuous(expand = c(0, 0), limits = c(-2, 5)) +
ggtitle("Scatterplot with 95% Confidence Interval") +
theme_minimal() +
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
axis.line = element_line(color = "black", size = 1.2))
set.seed(123)  # for reproducibility
data <- data.frame(x = rnorm(100, mean = 2, sd = 1),
y = rnorm(100, mean = 2, sd = 1))
x_range <- range(data$x, na.rm = TRUE)
y_range <- range(data$y, na.rm = TRUE)
ggplot(data, aes(x = x, y = y)) +
geom_point(color = "blue") +
stat_ellipse(type = "norm", level = 0.95, fill = "blue", alpha = 0.2) +
scale_x_continuous(expand = c(0, 0), limits = c(-1, 5)) +
scale_y_continuous(expand = c(0, 0), limits = c(-1, 5)) +
ggtitle("Scatterplot with 95% Confidence Interval") +
theme_minimal() +
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
axis.line = element_line(color = "black", size = 1.2))
f1
set.seed(123)  # for reproducibility
data <- data.frame(x = rnorm(100, mean = 2, sd = 1),
y = rnorm(100, mean = 2, sd = 1))
x_range <- range(data$x, na.rm = TRUE)
y_range <- range(data$y, na.rm = TRUE)
f1 <- ggplot(data, aes(x = x, y = y)) +
geom_point(color = "blue") +
stat_ellipse(type = "norm", level = 0.95, fill = "blue", alpha = 0.2) +
scale_x_continuous(expand = c(0, 0), limits = c(-1, 5)) +
scale_y_continuous(expand = c(0, 0), limits = c(-1, 5)) +
ggtitle("Scatterplot with 95% Confidence Interval") +
theme_minimal() +
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
axis.line = element_line(color = "black", size = 1.2))
f1
set.seed(123)  # for reproducibility
data <- data.frame(x = rnorm(100, mean = 2, sd = 1),
y = rnorm(100, mean = 2, sd = 1))
x_range <- range(data$x, na.rm = TRUE)
y_range <- range(data$y, na.rm = TRUE)
f1 <- ggplot(data, aes(x = x, y = y)) +
geom_point(color = "blue") +
stat_ellipse(type = "norm", level = 0.95, fill = "blue", alpha = 0.2) +
scale_x_continuous(expand = c(0, 0), limits = c(0, 5)) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 5)) +
ggtitle("Scatterplot with 95% Confidence Interval") +
theme_minimal() +
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
axis.line = element_line(color = "black", size = 1.2))
f1
set.seed(123)  # for reproducibility
data <- data.frame(x = rnorm(100, mean = 2, sd = 1),
y = rnorm(100, mean = 2, sd = 1))
x_range <- range(data$x, na.rm = TRUE)
y_range <- range(data$y, na.rm = TRUE)
f1 <- ggplot(data, aes(x = x, y = y)) +
geom_point(color = "blue") +
stat_ellipse(type = "norm", level = 0.95, fill = "blue", alpha = 0.2) +
scale_x_continuous(expand = c(0, 0), limits = c(-0.5, 5)) +
scale_y_continuous(expand = c(0, 0), limits = c(-0.5, 5)) +
ggtitle("Scatterplot with 95% Confidence Interval") +
theme_minimal() +
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
axis.line = element_line(color = "black", size = 1.2))
f1
set.seed(123)  # for reproducibility
data <- data.frame(x = rnorm(100, mean = 2, sd = 1),
y = rnorm(100, mean = 2, sd = 1))
x_range <- range(data$x, na.rm = TRUE)
y_range <- range(data$y, na.rm = TRUE)
f1 <- ggplot(data, aes(x = x, y = y)) +
geom_point(color = "blue", size=3) +
stat_ellipse(type = "norm", level = 0.95, fill = "blue", alpha = 0.2) +
scale_x_continuous(expand = c(0, 0), limits = c(-0.5, 5)) +
scale_y_continuous(expand = c(0, 0), limits = c(-0.5, 5)) +
ggtitle("Scatterplot with 95% Confidence Interval") +
theme_minimal() +
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
axis.line = element_line(color = "black", size = 1.2))
f1
data2 <- data.frame(x = rnorm(100, mean = 3, sd = 1),
y = rnorm(100, mean = 3, sd = 1))
f2 <- ggplot(data2, aes(x = x, y = y)) +
geom_point(color = "red", size=3) +  # Plot points in red
stat_ellipse(type = "norm", level = 0.95, fill = "red", alpha = 0.2) +  # Confidence
scale_x_continuous(expand = c(0, 0), limits = c(-0.5, 5)) +
scale_y_continuous(expand = c(0, 0), limits = c(-0.5, 5)) +# Dynamically set y axis limits
ggtitle("Scatterplot with Red Dots Distribution") +
theme_minimal() +
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
axis.line = element_line(color = "black", size = 1.2))
f2
f2 <- ggplot(data2, aes(x = x, y = y)) +
geom_point(color = "red", size=3) +  # Plot points in red
stat_ellipse(type = "norm", level = 0.95, fill = "red", alpha = 0.2) +  # Confidence
scale_x_continuous(expand = c(0, 0), limits = c(-0.5, 6)) +
scale_y_continuous(expand = c(0, 0), limits = c(-0.5, 6)) +# Dynamically set y axis limits
ggtitle("Scatterplot with Red Dots Distribution") +
theme_minimal() +
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
axis.line = element_line(color = "black", size = 1.2))
f2
data3 <- data.frame(x = rnorm(100, mean = 3, sd = 1),
y = rnorm(100, mean = 3, sd = 1))
f2 <- ggplot(data3, aes(x = x, y = y)) +
geom_point(color = "red", size=3) +  # Plot points in red
stat_ellipse(type = "norm", level = 0.95, fill = "red", alpha = 0.2) +  # Confidence
scale_x_continuous(expand = c(0, 0), limits = c(-0.5, 6)) +
scale_y_continuous(expand = c(0, 0), limits = c(-0.5, 6)) +# Dynamically set y axis limits
ggtitle("Scatterplot with Red Dots Distribution") +
theme_minimal() +
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
axis.line = element_line(color = "black", size = 1.2))
data$group <- 'Blue'
set.seed(456)  # for reproducibility
data2 <- data.frame(x = rnorm(100, mean = 3, sd = 2),
y = rnorm(100, mean = 3, sd = 2))
data2$group <- 'Red'
combined_data <- rbind(data, data2)
ggplot(combined_data, aes(x = x, y = y, color = group)) +
geom_point() +  # automatically uses the color aesthetic set by 'group'
stat_ellipse(type = "norm", level = 0.95, aes(fill = group), alpha = 0.2) +
scale_color_manual(values = c("Blue" = "blue", "Red" = "red")) +
scale_fill_manual(values = c("Blue" = "blue", "Red" = "red")) +
scale_x_continuous(expand = c(0, 0), limits = c(-0.5, 6)) +
scale_y_continuous(expand = c(0, 0), limits = c(-0.5, 6)) +
ggtitle("Scatterplot with Two Distributions") +
theme_minimal() +
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
axis.line = element_line(color = "black", size = 1.2))
data$group <- 'Blue'
set.seed(456)  # for reproducibility
data2 <- data.frame(x = rnorm(100, mean = 3, sd = 1.2),
y = rnorm(100, mean = 3, sd = 1.2))
data2$group <- 'Red'
combined_data <- rbind(data, data2)
ggplot(combined_data, aes(x = x, y = y, color = group)) +
geom_point() +  # automatically uses the color aesthetic set by 'group'
stat_ellipse(type = "norm", level = 0.95, aes(fill = group), alpha = 0.2) +
scale_color_manual(values = c("Blue" = "blue", "Red" = "red")) +
scale_fill_manual(values = c("Blue" = "blue", "Red" = "red")) +
scale_x_continuous(expand = c(0, 0), limits = c(-0.5, 6)) +
scale_y_continuous(expand = c(0, 0), limits = c(-0.5, 6)) +
ggtitle("Scatterplot with Two Distributions") +
theme_minimal() +
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
axis.line = element_line(color = "black", size = 1.2))
data$group <- 'Blue'
set.seed(456)  # for reproducibility
data1 <- data.frame(x = rnorm(100, mean = 2, sd = 0.5),
y = rnorm(100, mean = 2, sd = 0.5))
data2 <- data.frame(x = rnorm(100, mean = 3, sd = 1.2),
y = rnorm(100, mean = 3, sd = 1.2))
data2$group <- 'Red'
combined_data <- rbind(data1, data2)
set.seed(456)  # for reproducibility
data1 <- data.frame(x = rnorm(100, mean = 2, sd = 0.5),
y = rnorm(100, mean = 2, sd = 0.5))
data2 <- data.frame(x = rnorm(100, mean = 3, sd = 1.2),
y = rnorm(100, mean = 3, sd = 1.2))
data1$group <- 'Blue'
data2$group <- 'Red'
combined_data <- rbind(data1, data2)
ggplot(combined_data, aes(x = x, y = y, color = group)) +
geom_point() +  # automatically uses the color aesthetic set by 'group'
stat_ellipse(type = "norm", level = 0.95, aes(fill = group), alpha = 0.2) +
scale_color_manual(values = c("Blue" = "blue", "Red" = "red")) +
scale_fill_manual(values = c("Blue" = "blue", "Red" = "red")) +
scale_x_continuous(expand = c(0, 0), limits = c(-0.5, 6)) +
scale_y_continuous(expand = c(0, 0), limits = c(-0.5, 6)) +
ggtitle("Scatterplot with Two Distributions") +
theme_minimal() +
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
axis.line = element_line(color = "black", size = 1.2))
set.seed(456)  # for reproducibility
data1 <- data.frame(x = rnorm(100, mean = 1.5, sd = 0.5),
y = rnorm(100, mean = 1.5, sd = 0.5))
data2 <- data.frame(x = rnorm(100, mean = 3, sd = 1.2),
y = rnorm(100, mean = 3, sd = 1.2))
data1$group <- 'Blue'
data2$group <- 'Red'
combined_data <- rbind(data1, data2)
ggplot(combined_data, aes(x = x, y = y, color = group)) +
geom_point() +  # automatically uses the color aesthetic set by 'group'
stat_ellipse(type = "norm", level = 0.95, aes(fill = group), alpha = 0.2) +
scale_color_manual(values = c("Blue" = "blue", "Red" = "red")) +
scale_fill_manual(values = c("Blue" = "blue", "Red" = "red")) +
scale_x_continuous(expand = c(0, 0), limits = c(-0.5, 6)) +
scale_y_continuous(expand = c(0, 0), limits = c(-0.5, 6)) +
ggtitle("Scatterplot with Two Distributions") +
theme_minimal() +
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
axis.line = element_line(color = "black", size = 1.2))
set.seed(456)  # for reproducibility
data1 <- data.frame(x = rnorm(100, mean = 1.5, sd = 0.5),
y = rnorm(100, mean = 1.5, sd = 0.5))
data2 <- data.frame(x = rnorm(100, mean = 3, sd = 1.2),
y = rnorm(100, mean = 3, sd = 1.2))
data1$group <- 'Blue'
data2$group <- 'Red'
combined_data <- rbind(data1, data2)
f3 <- ggplot(combined_data, aes(x = x, y = y, color = group)) +
geom_point() +  # automatically uses the color aesthetic set by 'group'
stat_ellipse(type = "norm", level = 0.95, aes(fill = group), alpha = 0.2) +
scale_color_manual(values = c("Blue" = "blue", "Red" = "red")) +
scale_fill_manual(values = c("Blue" = "blue", "Red" = "red")) +
scale_x_continuous(expand = c(0, 0), limits = c(-0.5, 6)) +
scale_y_continuous(expand = c(0, 0), limits = c(-0.5, 6)) +
ggtitle("Scatterplot with Two Distributions") +
theme_minimal() +
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
axis.line = element_line(color = "black", size = 1.2))
f3
set.seed(456)  # for reproducibility
data1 <- data.frame(x = rnorm(100, mean = 1.5, sd = 0.5),
y = rnorm(100, mean = 1.5, sd = 0.5))
data2 <- data.frame(x = rnorm(100, mean = 3, sd = 1.2),
y = rnorm(100, mean = 3, sd = 1.2))
data1$group <- 'Blue'
data2$group <- 'Red'
combined_data <- rbind(data1, data2)
f3 <- ggplot(combined_data, aes(x = x, y = y, color = group)) +
geom_point(size=3) +  # automatically uses the color aesthetic set by 'group'
stat_ellipse(type = "norm", level = 0.95, aes(fill = group), alpha = 0.2) +
scale_color_manual(values = c("Blue" = "blue", "Red" = "red")) +
scale_fill_manual(values = c("Blue" = "blue", "Red" = "red")) +
scale_x_continuous(expand = c(0, 0), limits = c(-0.5, 6)) +
scale_y_continuous(expand = c(0, 0), limits = c(-0.5, 6)) +
ggtitle("Scatterplot with Two Distributions") +
theme_minimal() +
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
axis.line = element_line(color = "black", size = 1.2))
f3
data4 <- data.frame(x = rnorm(100, mean = 1.5, sd = 0.5),
y = rnorm(100, mean = 1.5, sd = 0.5))
data5 <- data.frame(x = rnorm(100, mean = 2.5, sd = 1.2),
y = rnorm(100, mean = 2.5, sd = 1.2))
data4$group <- 'Blue'
data5$group <- 'Red'
combined_data <- rbind(data1, data2)
f4 <- ggplot(combined_data, aes(x = x, y = y, color = group)) +
geom_point(size=3) +  # automatically uses the color aesthetic set by 'group'
stat_ellipse(type = "norm", level = 0.95, aes(fill = group), alpha = 0.2) +
scale_color_manual(values = c("Blue" = "blue", "Red" = "red")) +
scale_fill_manual(values = c("Blue" = "blue", "Red" = "red")) +
scale_x_continuous(expand = c(0, 0), limits = c(-0.5, 6)) +
scale_y_continuous(expand = c(0, 0), limits = c(-0.5, 6)) +
ggtitle("Scatterplot with Two Distributions") +
theme_minimal() +
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
axis.line = element_line(color = "black", size = 1.2))
f4
data4 <- data.frame(x = rnorm(100, mean = 1.5, sd = 0.5),
y = rnorm(100, mean = 1.5, sd = 0.5))
data5 <- data.frame(x = rnorm(100, mean = 2, sd = 1),
y = rnorm(100, mean = 2, sd = 1))
data4$group <- 'Blue'
data5$group <- 'Red'
combined_data <- rbind(data1, data2)
f4 <- ggplot(combined_data, aes(x = x, y = y, color = group)) +
geom_point(size=3) +  # automatically uses the color aesthetic set by 'group'
stat_ellipse(type = "norm", level = 0.95, aes(fill = group), alpha = 0.2) +
scale_color_manual(values = c("Blue" = "blue", "Red" = "red")) +
scale_fill_manual(values = c("Blue" = "blue", "Red" = "red")) +
scale_x_continuous(expand = c(0, 0), limits = c(-0.5, 6)) +
scale_y_continuous(expand = c(0, 0), limits = c(-0.5, 6)) +
ggtitle("Scatterplot with Two Distributions") +
theme_minimal() +
theme(axis.text = element_blank(),
axis.ticks = element_blank(),
axis.line = element_line(color = "black", size = 1.2))
f4
